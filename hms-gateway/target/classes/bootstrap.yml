#需要将配置文件名改为bootstrap,因为spring boot默认执行的配置文件application.yml
#项目启动之后，就会直接加载,而bootstrap,yml在spring boot中会优先加载，且bootstrap
#中的属性不会被覆盖


server:
  port: 8200

spring:
  application:
    name: hms-service-zuul
#  cloud:
#    config:
#      name: service-zuul #文件名前缀名称
#      profile: dev
#      label: master
#      uri: http://localhost:11113/
zuul:
  sensitive-headers: Access-Control-Allow-Origin #需要忽略的头部信息，不在传播到其他服务
  ignored-headers: Access-Control-Allow-Origin,H-APP-Id,Token,APPToken
  prefix: /api
  routes:
    api-hotel:
      path: /hbs/** #会自动将server-id添加
      service-id: hms-service-hotel #zuul注册到eureka上去发现其它服务，对于同名的微服务会进行负载均衡
      stripPrefix: true
      ribbon:
        eager-load:
          enabled: true
    api-stock:
      path: /ims/**
      service-id: hms-service-stock #zuul注册到eureka上去发现其它服务，对于同名的微服务会进行负载均衡
      ribbon:
        eager-load:
          enabled: false
    api-user:
      path: /ums/**
      service-id: hms-service-user #zuul注册到eureka上去发现其它服务，对于同名的微服务会进行负载均衡
      stripPrefix: true
      ribbon:
        eager-load:
          enabled: true
    api-order:
      path: /oms/**
      service-id: hms-service-order #zuul注册到eureka上去发现其它服务，对于同名的微服务会进行负载均衡
    api-room:
      path: /rms/**
      service-id: hms-service-room #zuul注册到eureka上去发现其它服务，对于同名的微服务会进行负载均衡
    api-manager:
      path: /mms/**
      service-id: hms-service-manager #zuul注册到eureka上去发现其它服务，对于同名的微服务会进行负载均衡
#     uri: http://127.0.0.1:12224/ 通过url直接映射

#服务器不用注册到其他服务器
#eureka:
#  client:
#    registerWithEureka: false
  #服务器不用去服务器抓取注册信息
#    fetchRegistry: false
eureka:
  instance:
    hostname: localhost # 服务提供者应用所在的主机（本地测试的话，使用localhost或者127.0.0.1即可，或者在host文件中指定一个虚拟域名也可以）
    lease-renewal-interval-in-seconds: 5 # 心跳时间，表示eureka client发送心跳给eureka server端的频率（缺省为30s）
  client:
    service-url:
      defaultZone: http://server.eureka.slave1.com:18761/eureka,http://server.eureka.slave2.com:28761/eureka # 指定eureka服务器集群列表地址
